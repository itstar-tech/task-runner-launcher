on:
  release:
    types: [created]

jobs:
  releases-matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            target: task-runner-launcher-linux-amd64
          - goos: linux
            goarch: arm64
            target: task-runner-launcher-linux-arm64
            
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.8.5
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Build cross-platform binary
        run: bazel build //cmd/launcher:${{ matrix.target }}

      - name: Prepare binary for upload
        run: |
          mkdir -p release-assets
          # Get the actual Bazel output path
          OUTPUT_PATH=$(bazel info output_path)
          BINARY_NAME=task-runner-launcher-${{ matrix.goos }}-${{ matrix.goarch }}
          cp $OUTPUT_PATH/k8-fastbuild/bin/cmd/launcher/${{ matrix.target }}_/${{ matrix.target }} release-assets/$BINARY_NAME
          chmod +x release-assets/$BINARY_NAME
          
          # Generate SHA256 sum
          cd release-assets
          sha256sum $BINARY_NAME > $BINARY_NAME.sha256

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BINARY_NAME=task-runner-launcher-${{ matrix.goos }}-${{ matrix.goarch }}
          gh release upload ${{ github.event.release.tag_name }} \
            release-assets/$BINARY_NAME \
            release-assets/$BINARY_NAME.sha256
